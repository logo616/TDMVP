apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName   rootProject.versionName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
repositories {
    maven {
        url "https://jitpack.io"
    }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }

}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
//    implementation 'com.android.support:appcompat-v7:26.+'
    implementation rootProject.libsExt.SupportV7

    testImplementation 'junit:junit:4.12'

 /*   implementation "com.jenzz.noop:annotation:1.2.0"
    implementation 'com.github.jenzz:Java-NoOp:parent-1.2.0'*/
    implementation 'com.hannesdorfmann.mosby3:mvp:3.1.1' // Plain MVP
    implementation 'com.hannesdorfmann.mosby3:viewstate:3.1.1' // MVP + ViewState support
    implementation 'com.hannesdorfmann.mosby3:mvi:3.1.1' // Model-View-Intent

    // MVP + ViewState + LCE Views
    implementation 'com.hannesdorfmann.mosby3:mvp-lce:3.1.1'

    // Null Object Presenter for MVP
    implementation 'com.hannesdorfmann.mosby3:mvp-nullobject-presenter:3.1.1'

    // Queuing Presenter for MVP
    implementation 'com.hannesdorfmann.mosby3:mvp-queuing-presenter:3.1.1'
}
